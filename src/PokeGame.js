import { Component } from 'react';
import React from 'react';
import Pokecard from './Pokecard';
import './PokeGame.css';

class PokeGame extends Component {
    
    render() {
        let player1 = { name: 'Player 1', numCards: 4, card1: {}, card2: {}, card3: {}, card4: {} };
        let player2 = { name: 'Player 2', numCards: 4, card1: {}, card2: {}, card3: {}, card4: {} };
        let assignedPokemon = [];
        let pokedex = [
            {id: 4, name: 'Charmander', type: 'Fire', base_experience: 62},
            {id: 7, name: 'Squirtle', type: 'Water', base_experience: 63},
            {id: 11, name: 'Metapod', type: 'Bug', base_experience: 72},
            {id: 12, name: 'Butterfree', type: 'Flying', base_experience: 178},
            {id: 25, name: 'Pikachu', type: 'Electric', base_experience: 112},
            {id: 39, name: 'Jigglypuff', type: 'Normal', base_experience: 95},
            {id: 94, name: 'Gengar', type: 'Poison', base_experience: 225},
            {id: 133, name: 'Eevee', type: 'Normal', base_experience: 65}
        ];
        let rng = function() { return Math.floor(Math.random() * pokedex.length) }
        let assignRandomizedPokemon = function(player1, player2, pokemon) {
            /** Assign player1's cards first, then assign player 2 cards from remaining pokemon. */
            let chooseNextPokemon = function(pkmn) {
                // make sure the number generated by rng is not a number previously chosen
                let num = 0;
                do {
                    num = pkmn();
                    assignedPokemon.push(num);
                    return num;
                } while (!assignedPokemon.includes(num));
            }
            player1.card1 = pokemon[chooseNextPokemon(rng)];
            player1.card2 = pokemon[chooseNextPokemon(rng)];
            player1.card3 = pokemon[chooseNextPokemon(rng)];
            player1.card4 = pokemon[chooseNextPokemon(rng)];
            player2.card1 = pokemon[chooseNextPokemon(rng)];
            player2.card2 = pokemon[chooseNextPokemon(rng)];
            player2.card3 = pokemon[chooseNextPokemon(rng)];
            player2.card4 = pokemon[chooseNextPokemon(rng)];
        }
        let renderDecks = function (pokemon1, pokemon2, pokemon3, pokemon4) {
            return <div>
                <Pokecard key={pokemon1.name} id={pokemon1.id.toString()} name={pokemon1.name} 
                        type={pokemon1.type} base_exp={pokemon1.base_experience} />
                <Pokecard key={pokemon2.name} id={pokemon2.id.toString()} name={pokemon2.name} 
                        type={pokemon2.type} base_exp={pokemon2.base_experience} />
                <Pokecard key={pokemon3.name} id={pokemon3.id.toString()} name={pokemon3.name} 
                        type={pokemon3.type} base_exp={pokemon3.base_experience} />
                <Pokecard key={pokemon4.name} id={pokemon4.id.toString()} name={pokemon4.name} 
                        type={pokemon4.type} base_exp={pokemon4.base_experience} />
            </div>
        }
        assignRandomizedPokemon(player1, player2, pokedex);
        const player1_deck = renderDecks(player1.card1, player1.card2, player1.card3, player1.card4);
        const player2_deck = renderDecks(player2.card1, player2.card2, player2.card3, player2.card4);
        return (
            <div className="PokeGame">
                <div className="Player1 Deck card-deck">{ player1_deck }</div>
                <div className="Player2 Deck card-deck">{ player2_deck }</div>
            </div>
        );
    }
}
export default PokeGame;